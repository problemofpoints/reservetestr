library(usethis)
use_r("data")
use_test("data")
use_roxygen_md()
use_package_doc()
use_readme_md()
use_news_md()
use_vignette("test-mack-method")
use_mit_license("problemofpoints")
library(usethis)
install.packages("codecov")
?usethis::use_coverage()
usethis::use_data_raw()
usethis::use_data()
?usethis::use_data
usethis::use_pipe()
?usethis::use_tidy_eval
usethis::use_tidy_eval()
usethis::use_tidy_description
use_package("dplyr")
base_url <- "http://www.casact.org/research/reserve_data/"
lobs <-  c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab")
import_and_clean_triangles <- function(lob, base_url){
url <- paste0(base_url, lob, "_pos.csv")
# import csv and rename columns
df <- readr::read_csv(url, col_types = "iciiiddddddid", skip = 1,
col_names = c("group_id", "company", "acc_yr", "dev_yr", "dev_lag", "cum_incurred_loss", "cum_paid_loss",
"ibnr", "direct_ep", "ceded_ep", "net_ep", "single_entity", "posted_reserve_1997"))
# add incremental losses
df <- df %>% dplyr::group_by(group_id, acc_yr) %>% dplyr::arrange(group_id, acc_yr, dev_yr) %>%
dplyr::mutate(increm_paid_loss = dplyr::if_else(dev_lag != 1, cum_paid_loss - dplyr::lag(cum_paid_loss), cum_paid_loss),
increm_incurred_loss = dplyr::if_else(dev_lag != 1, cum_incurred_loss - dplyr::lag(cum_incurred_loss), cum_incurred_loss))
# add lob name
df <- df %>% dplyr::mutate(line = lob)
df
}
use_package("purrr")
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(file_names, importAndCleanTriangles)
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(file_names, import_and_clean_triangles)
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(lobs, import_and_clean_triangles, base_url)
library(magrittr)
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(lobs, import_and_clean_triangles, base_url)
tri_data
tri_data <- tri_data %>% dplyr::ungroup() %>% dplyr::select(line, 2:15)
tri_data
# summary of db
tri_data_summary <- tri_data %>% dplyr::group_by(line) %>%
dplyr::summarise(ct_comp = length(unique(company)), ct_acc_yr = length(unique(acc_yr)), ct_obs = n())
knitr::kable(tri_data_summary, format = "pandoc", digits = c(0,0,0,0),
col.names = c("Line", "Number of companies", "Number of accident years",
"Total number of observations"),
format.args = list(big.mark = ","),
caption = "Summary of CAS Loss Reserve Database")
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(lobs, import_and_clean_triangles, base_url)
tri_data <- tri_data %>% dplyr::ungroup() %>% dplyr::select(line, 2:7, increm_incurred_loss, 8, increm_paid_loss, 9:14)
tri_data
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(lobs, import_and_clean_triangles, base_url)
tri_data <- tri_data %>% dplyr::ungroup() %>% dplyr::select(line, 1:6, increm_incurred_loss, 7, increm_paid_loss, 8:14)
tri_data
# summary of db
tri_data_summary <- tri_data %>% dplyr::group_by(line) %>%
dplyr::summarise(ct_comp = length(unique(company)), ct_acc_yr = length(unique(acc_yr)), ct_obs = n())
knitr::kable(tri_data_summary, format = "pandoc", digits = c(0,0,0,0),
col.names = c("Line", "Number of companies", "Number of accident years",
"Total number of observations"),
format.args = list(big.mark = ","),
caption = "Summary of CAS Loss Reserve Database")
# write out data file
devtools::use_data(tri_data, overwrite = TRUE)
import_and_clean_triangles <- function(lob, base_url){
url <- paste0(base_url, lob, "_pos.csv")
# import csv and rename columns
df <- readr::read_csv(url, col_types = "iciiiddddddid", skip = 1,
col_names = c("group_id", "company", "acc_yr", "dev_yr", "dev_lag", "cum_incurred_loss", "cum_paid_loss",
"bulk_ibnr", "direct_ep", "ceded_ep", "net_ep", "single_entity", "posted_reserve_1997"))
# add incremental losses
df <- df %>% dplyr::group_by(group_id, acc_yr) %>% dplyr::arrange(group_id, acc_yr, dev_yr) %>%
dplyr::mutate(increm_paid_loss = dplyr::if_else(dev_lag != 1, cum_paid_loss - dplyr::lag(cum_paid_loss), cum_paid_loss),
increm_incurred_loss = dplyr::if_else(dev_lag != 1, cum_incurred_loss - dplyr::lag(cum_incurred_loss), cum_incurred_loss))
# add lob name
df <- df %>% dplyr::mutate(line = lob)
df
}
# loop through list of files and run 'importAndCleanTriangles()'
tri_data <- purrr::map_df(lobs, import_and_clean_triangles, base_url)
cas_loss_reserve_db <- tri_data %>% dplyr::ungroup() %>% dplyr::select(line, 1:6, increm_incurred_loss, 7, increm_paid_loss, 8:14)
# write out data file
devtools::use_data(cas_loss_reserve_db, overwrite = TRUE)
# summary of db
tri_data_summary <- cas_loss_reserve_db %>% dplyr::group_by(line) %>%
dplyr::summarise(ct_comp = length(unique(company)), ct_acc_yr = length(unique(acc_yr)), ct_obs = n())
knitr::kable(tri_data_summary, format = "pandoc", digits = c(0,0,0,0),
col.names = c("Line", "Number of companies", "Number of accident years",
"Total number of observations"),
format.args = list(big.mark = ","),
caption = "Summary of CAS Loss Reserve Database")
cas_loss_reserve_db <- tri_data %>% dplyr::ungroup() %>% dplyr::select(line, 1:6, increm_incurred_loss, 7, increm_paid_loss, 8:12,14,13)
cas_loss_reserve_db
# write out data file
devtools::use_data(cas_loss_reserve_db, overwrite = TRUE)
library(testthat)
tri_data_summary
sum(tri_data_summary[,2:4])
devtools::load_all(".")
?rlang
install.packages("rlang")
install.packages("rlang")
install.packages(data.table)
install.packages("data.table")
rlang::`:=`
library(reservetestr)
data(cas_loss_reserve_db)
cas_loss_reserve_db
tri_data_summary <- cas_loss_reserve_db %>% dplyr::group_by(line) %>%
dplyr::summarise(ct_comp = length(unique(company)), ct_acc_yr = length(unique(acc_yr)), ct_obs = n())
tri_data_summary$line
tri_data_summary$line %in% c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab")
tri_data_summary$line %in% c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab") %>% sum(.)
expect_equal(sum(tri_data_summary$line %in% c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab")), 6)
library(testthat)
expect_equal(sum(tri_data_summary$line %in% c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab")), 6)
library(reservetestr)
library(reservetestr)
library(reservetestr)
library(reservetestr)
?testthat::auto_test()
install.packages("covr")
install.packages("datapasta")
install.packages("goodpractice")
devtools::install_github("mangothcat/goodpractice")
devtools::install_github("mangothecat/goodpractice")
install.packages("available")
available::available("reservetestr")
install.packages("usethis")
ChainLadder::auto
